import { jsx } from "react/jsx-runtime";
import { useCallback, useEffect, useState } from "react";
import { CheckIcon, CopyIcon } from "../icons/index.js";
import { Button } from "./button.js";
function CopyToClipboard({
  getValue,
  ...props
}) {
  const [isCopied, setCopied] = useState(false);
  useEffect(() => {
    if (!isCopied) return;
    const timerId = setTimeout(() => {
      setCopied(false);
    }, 2e3);
    return () => {
      clearTimeout(timerId);
    };
  }, [isCopied]);
  const handleClick = useCallback(async () => {
    setCopied(true);
    if (!navigator?.clipboard) {
      console.error("Access to clipboard rejected!");
    }
    try {
      await navigator.clipboard.writeText(getValue());
    } catch {
      console.error("Failed to copy!");
    }
  }, [getValue]);
  const IconToUse = isCopied ? CheckIcon : CopyIcon;
  return /* @__PURE__ */ jsx(
    Button,
    {
      onClick: handleClick,
      title: "Copy code",
      variant: "outline",
      ...props,
      children: /* @__PURE__ */ jsx(IconToUse, { height: "16", className: "nextra-copy-icon" })
    }
  );
}
export {
  CopyToClipboard
};
