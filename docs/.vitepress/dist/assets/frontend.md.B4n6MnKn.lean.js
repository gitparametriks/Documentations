import{_ as e,c as a,a1 as s,o as n}from"./chunks/framework.htKiKLP0.js";const g=JSON.parse('{"title":"IoT Dashboard Frontend Repository Structure","description":"","frontmatter":{},"headers":[],"relativePath":"frontend.md","filePath":"frontend.md"}'),i={name:"frontend.md"};function o(r,t,d,l,c,p){return n(),a("div",null,t[0]||(t[0]=[s(`<h1 id="iot-dashboard-frontend-repository-structure" tabindex="-1">IoT Dashboard Frontend Repository Structure <a class="header-anchor" href="#iot-dashboard-frontend-repository-structure" aria-label="Permalink to &quot;IoT Dashboard Frontend Repository Structure&quot;">​</a></h1><p>This document provides an overview of the <strong>IoT Dashboard Frontend</strong> repository structure, key components, and dependencies. It supplements the README by explaining the organization of directories and files, purpose, and technical requirements for development. The <strong>IoT Dashboard Frontend</strong> is a feature-rich web application developed by <strong>Parametriks</strong> for real-time monitoring, control of IoT devices, and data visualization in the insurance industry.</p><h2 id="project-overview" tabindex="-1">Project Overview <a class="header-anchor" href="#project-overview" aria-label="Permalink to &quot;Project Overview&quot;">​</a></h2><p>The <strong>IoT Dashboard Frontend</strong> is designed to provide an intuitive and responsive interface for monitoring IoT devices, visualizing metrics, and enabling real-time control. Key features include:</p><ul><li><strong>Real-time Data Monitoring</strong>: Enables clients to track IoT device data and activities.</li><li><strong>Data Visualization</strong>: Displays metrics such as claims, risks, and sensor data through dynamic charts and graphs.</li><li><strong>Authentication and User Management</strong>: Integrated with AWS Cognito for secure user authentication.</li><li><strong>Analytics</strong>: Offers comprehensive insights for clients and insurers to make data-driven decisions.</li></ul><p>Built with <strong>Next.js</strong>, <strong>React</strong>, <strong>TailwindCSS</strong>, and <strong>AWS SDK</strong>, this dashboard allows for scalable, modular, and efficient development.</p><h2 id="directory-structure" tabindex="-1">Directory Structure <a class="header-anchor" href="#directory-structure" aria-label="Permalink to &quot;Directory Structure&quot;">​</a></h2><p>The repository follows a modular structure, with each folder serving a specific purpose to maintain clean separation of concerns and code organization:</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── LICENSE                  # License file</span></span>
<span class="line"><span>├── README.md                # Project documentation</span></span>
<span class="line"><span>├── app                      # Main application code and page components</span></span>
<span class="line"><span>├── components               # Reusable components shared across the app</span></span>
<span class="line"><span>├── lib                      # Utility functions and configurations</span></span>
<span class="line"><span>├── public                   # Static assets (images, CSV data files)</span></span>
<span class="line"><span>├── types                    # TypeScript type definitions</span></span>
<span class="line"><span>├── next.config.mjs          # Next.js configuration</span></span>
<span class="line"><span>├── package.json             # Project dependencies and scripts</span></span>
<span class="line"><span>├── tailwind.config.ts       # TailwindCSS configuration</span></span>
<span class="line"><span>└── tsconfig.json            # TypeScript configuration</span></span></code></pre></div><h3 id="app-directory" tabindex="-1">app Directory <a class="header-anchor" href="#app-directory" aria-label="Permalink to &quot;app Directory&quot;">​</a></h3><p>The <code>app</code> directory contains the main application code for handling authentication, client and insurer pages, and visualizations. Key components include:</p><ul><li><strong>Authentication Pages</strong>: Handles signup, verification, password reset for clients and insurers.</li><li><strong>Dashboards</strong>: Contains pages and charts for visualizing claims, risks, and sensor data for both clients and insurers.</li><li><strong>AWS Configurations</strong>: <code>aws-config.js</code> and <code>aws-exports.js</code> for AWS Cognito and other AWS integrations.</li><li><strong>hooks</strong>: Custom React hooks for managing state, such as sidebar toggle and notifications.</li></ul><h3 id="components-directory" tabindex="-1">components Directory <a class="header-anchor" href="#components-directory" aria-label="Permalink to &quot;components Directory&quot;">​</a></h3><p>The <code>components</code> directory contains reusable UI components that enhance modularity and code reuse across the application:</p><ul><li><strong>client-navbar</strong> and <strong>insurer-navbar</strong>: Navigation components customized for client and insurer dashboards.</li><li><strong>table</strong>: Contains components for data tables with functionalities like pagination, filtering, and sorting.</li><li><strong>ui</strong>: A collection of UI elements (buttons, modals, tooltips) styled with TailwindCSS, providing consistency in design.</li></ul><h3 id="lib-directory" tabindex="-1">lib Directory <a class="header-anchor" href="#lib-directory" aria-label="Permalink to &quot;lib Directory&quot;">​</a></h3><p>Utility functions and configuration files are located in the <code>lib</code> directory. These include:</p><ul><li><strong>client-menu-list.ts</strong> and <strong>insurer-menu-list.ts</strong>: Define menu items for client and insurer dashboards.</li><li><strong>utils.ts</strong>: General utility functions used across the application for consistent data processing and formatting.</li></ul><h3 id="public-directory" tabindex="-1">public Directory <a class="header-anchor" href="#public-directory" aria-label="Permalink to &quot;public Directory&quot;">​</a></h3><p>The <code>public</code> directory contains static assets and data files, such as:</p><ul><li><strong>Images</strong>: Project logos and icons, including <code>parametriks.png</code> and <code>parametriksGif.gif</code>.</li><li><strong>CSV Data</strong>: Sample data files like <code>Claims.csv</code>, <code>Risks.csv</code>, and <code>Facilities.csv</code> for initial data loading and testing.</li></ul><h3 id="types-directory" tabindex="-1">types Directory <a class="header-anchor" href="#types-directory" aria-label="Permalink to &quot;types Directory&quot;">​</a></h3><p>The <code>types</code> directory contains TypeScript type definitions to enforce type safety across the application. For example:</p><ul><li><strong>clientDataTypes.ts</strong>: Defines data types specific to client-related data, ensuring type consistency.</li></ul><h2 id="package-json" tabindex="-1">package.json <a class="header-anchor" href="#package-json" aria-label="Permalink to &quot;package.json&quot;">​</a></h2><p>The <code>package.json</code> file defines the project&#39;s dependencies, development dependencies, and scripts.</p><h3 id="scripts" tabindex="-1">Scripts <a class="header-anchor" href="#scripts" aria-label="Permalink to &quot;Scripts&quot;">​</a></h3><table><thead><tr><th>Script</th><th>Command</th><th>Description</th></tr></thead><tbody><tr><td><strong>dev</strong></td><td><code>next dev</code></td><td>Runs the app in development mode.</td></tr><tr><td><strong>build</strong></td><td><code>next build</code></td><td>Builds the app for production.</td></tr><tr><td><strong>start</strong></td><td><code>next start</code></td><td>Starts the production server.</td></tr><tr><td><strong>lint</strong></td><td><code>next lint</code></td><td>Runs linting checks to ensure code quality.</td></tr></tbody></table><h3 id="key-dependencies" tabindex="-1">Key Dependencies <a class="header-anchor" href="#key-dependencies" aria-label="Permalink to &quot;Key Dependencies&quot;">​</a></h3><p>The IoT Dashboard relies on various dependencies to provide a comprehensive feature set for real-time data handling and visualization:</p><table><thead><tr><th>Dependency</th><th>Purpose</th></tr></thead><tbody><tr><td><strong>@hookform/resolvers</strong></td><td>Used with <code>react-hook-form</code> for form validation.</td></tr><tr><td><strong>@radix-ui/react-component</strong></td><td>Provides UI components (e.g., <code>avatar</code>, <code>checkbox</code>, <code>popover</code>) for consistent styling.</td></tr><tr><td><strong>@tanstack/react-table</strong></td><td>A powerful table component for data-heavy dashboards, with sorting and filtering features.</td></tr><tr><td><strong>aws-sdk</strong></td><td>AWS SDK for JavaScript, enabling access to AWS Cognito and other services.</td></tr><tr><td><strong>react-papaparse</strong></td><td>CSV parser for handling data imports and conversions.</td></tr><tr><td><strong>recharts</strong></td><td>Provides data visualization charts, used to graphically represent IoT metrics.</td></tr><tr><td><strong>tailwindcss</strong></td><td>Utility-first CSS framework for responsive design and component styling.</td></tr><tr><td><strong>zustand</strong></td><td>Lightweight state management library to manage global state in the app.</td></tr></tbody></table><h3 id="development-dependencies" tabindex="-1">Development Dependencies <a class="header-anchor" href="#development-dependencies" aria-label="Permalink to &quot;Development Dependencies&quot;">​</a></h3><p>Development dependencies support code quality, formatting, and consistency. Some key dev dependencies include:</p><table><thead><tr><th>Dependency</th><th>Purpose</th></tr></thead><tbody><tr><td><strong>eslint</strong> and <strong>eslint-config-next</strong></td><td>Enforces code standards and best practices.</td></tr><tr><td><strong>prettier</strong> and <strong>prettier-plugin-tailwindcss</strong></td><td>Formats code consistently and organizes TailwindCSS classes.</td></tr><tr><td><strong>typescript</strong></td><td>TypeScript is used for static type-checking, enhancing code robustness and maintainability.</td></tr><tr><td><strong>tailwindcss-debug-screens</strong></td><td>Provides responsive screens for debugging and ensuring UI consistency across devices.</td></tr></tbody></table><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Follow these steps to set up and run the project locally:</p><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><p>Make sure to have Node.js and npm installed. Install the latest npm version with:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm@latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span></span></code></pre></div><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><ol><li><p><strong>Clone the repository</strong>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/parametriks/iot-dashboard-frontend.git</span></span></code></pre></div></li><li><p><strong>Navigate to the project directory</strong>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iot-dashboard-frontend</span></span></code></pre></div></li><li><p><strong>Install NPM packages</strong>:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p><strong>Update AWS Configuration</strong>: Update AWS configuration paths in files that use AWS Cognito by replacing the import path with:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cognito </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./app/aws/aws-config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li></ol><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>The IoT Dashboard provides the following functionalities:</p><ul><li><strong>User Authentication</strong>: Users can sign up, verify their accounts, and manage theisr credentials via AWS Cognito.</li><li><strong>Data Visualization</strong>: Interactive graphs and charts for visualizing IoT metrics, claims, and risk distributions.</li><li><strong>Real-Time Monitoring</strong>: Track trends and activities related to IoT devices and sensors for clients and insurers.</li></ul><p>For more detailed examples and documentation, refer to the <a href="https://www.parametriks.io" target="_blank" rel="noreferrer">Parametriks Documentation</a>.</p><h2 id="additional-information" tabindex="-1">Additional Information <a class="header-anchor" href="#additional-information" aria-label="Permalink to &quot;Additional Information&quot;">​</a></h2><p>For more detailed information about the project, including contributions, licensing, and acknowledgments, refer to the main README.md file. You can find links to resources such as the Next.js documentation, Radix UI, AWS Cognito, and more.</p>`,47)]))}const u=e(i,[["render",o]]);export{g as __pageData,u as default};
